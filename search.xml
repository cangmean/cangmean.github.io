<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>mysql 常用命令</title>
      <link href="/2018/07/24/mysql-command/"/>
      <url>/2018/07/24/mysql-command/</url>
      <content type="html"><![CDATA[<p>因为项目中使用 orm， mysql 一些常用的命令都模糊了， 在此记录下 mysql 常用命令方便随时查看.</p><h3 id="库操作"><a href="#库操作" class="headerlink" title="库操作"></a>库操作</h3><p>对库的一些操作</p><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database `db_name` default character set utf8;</span><br></pre></td></tr></table></figure><h4 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database `db_name`;</span><br></pre></td></tr></table></figure><h3 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h3><p>对表的一些操作</p><h4 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h4><p>创建一个<code>user</code>的数据表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `user` (</span><br><span class="line">    `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">    `username` varchar(50) DEFAULT &apos;&apos; COMMENT &apos;用户名&apos;,</span><br><span class="line">    `password` varchar(255) DEFAULT &apos;&apos; COMMENT &apos;密码&apos;,</span><br><span class="line">    PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="删除数据表"><a href="#删除数据表" class="headerlink" title="删除数据表"></a>删除数据表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table `user`;</span><br></pre></td></tr></table></figure><h4 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h4><p>插入一条数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into user(id, username, password) values(1, &apos;a&apos;, &apos;a123&apos;);</span><br></pre></td></tr></table></figure><p>如果表名后面写字段名， 相应的 values 也必须对应上， 如果没有写字段名， 默认为全部字段.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into user(username, password) values(&apos;a&apos;, &apos;a123&apos;);</span><br></pre></td></tr></table></figure><p>如果 values 后面写对组数据， 表示批量插入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into user values(1, &apos;a&apos;, &apos;a123&apos;), (2, &apos;b&apos;, &apos;b123&apos;);</span><br></pre></td></tr></table></figure><h4 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h4><p>查询一条数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select</span><br><span class="line">    username</span><br><span class="line">from</span><br><span class="line">    user</span><br><span class="line">where</span><br><span class="line">    password like &apos;%12%&apos;</span><br><span class="line">order by</span><br><span class="line">    username desc;</span><br></pre></td></tr></table></figure><h4 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update user set usrename=&apos;c&apos; where id = 1;</span><br></pre></td></tr></table></figure><h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from user where id = 1;</span><br></pre></td></tr></table></figure><h4 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h4><p>创建普通索引, 注意<code>Null</code>值对索引无效， 还是会进行查询， 需要改成空字符串， 如果写入多个字段表示组合索引</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table `表名` add index `索引名称` (`字段`， `字段`);</span><br></pre></td></tr></table></figure><p>例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table user add index `idx_name` (`username`);</span><br></pre></td></tr></table></figure><p>创建唯一索引</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table user add unique `idx_name` (`username`);</span><br></pre></td></tr></table></figure><p>创建唯一组合索引</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table user add unique `idx_name` (`username`, `password`);</span><br></pre></td></tr></table></figure><h4 id="查看索引"><a href="#查看索引" class="headerlink" title="查看索引"></a>查看索引</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show index from `user`;</span><br></pre></td></tr></table></figure><h4 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table user drop index `idx_name`;</span><br></pre></td></tr></table></figure><h3 id="数据的导入导出"><a href="#数据的导入导出" class="headerlink" title="数据的导入导出"></a>数据的导入导出</h3><h4 id="导出操作"><a href="#导出操作" class="headerlink" title="导出操作"></a>导出操作</h4><p>导出数据库数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p `数据库名` &gt; db.sql</span><br></pre></td></tr></table></figure><p>导出数据库指定表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p `数据库名` `表名` &gt; db.sql</span><br></pre></td></tr></table></figure><p>导出所有数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p --all-databases &gt; all_db.sql</span><br></pre></td></tr></table></figure><h4 id="导入操作"><a href="#导入操作" class="headerlink" title="导入操作"></a>导入操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p &lt; db.sql</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vim zsh 增强命令行</title>
      <link href="/2018/07/17/vim-zsh/"/>
      <url>/2018/07/17/vim-zsh/</url>
      <content type="html"><![CDATA[<p>使用 vim 插件来增强终端下的编辑能力， 使用 zsh 替换 bash 提升自动补全</p><h3 id="安装-vim-和插件管理器-vundle"><a href="#安装-vim-和插件管理器-vundle" class="headerlink" title="安装 vim 和插件管理器 vundle"></a>安装 vim 和插件管理器 vundle</h3><p>vundle 包管理， 可以轻松的安装 vim 插件, 首先安装 vundle</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ～/.vim/bundle/vundle</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle</span><br></pre></td></tr></table></figure><p>添加 vim 配置， 在用户主目录下创建<code>.vim</code>并编辑内容</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">set nocompatible</span><br><span class="line">filetype off</span><br><span class="line">set rtp+=~/.vim/bundle/vundle</span><br><span class="line"></span><br><span class="line">call vundle#begin()</span><br><span class="line"></span><br><span class="line">Plugin &apos;scrooloose/nerdtree&apos;</span><br><span class="line">Plugin &apos;majutsushi/tagbar&apos;</span><br><span class="line">Plugin &apos;bling/vim-airline&apos;</span><br><span class="line">Plugin &apos;mattn/emmet-vim&apos;</span><br><span class="line">Plugin &apos;easymotion/vim-easymotion&apos;</span><br><span class="line">Plugin &apos;tmhedberg/SimpylFold&apos;</span><br><span class="line">Plugin &apos;vim-scripts/indentpython.vim&apos;</span><br><span class="line">Plugin &apos;scrooloose/syntastic&apos;</span><br><span class="line">Plugin &apos;nvie/vim-flake8&apos;</span><br><span class="line">Plugin &apos;tomasr/molokai&apos;</span><br><span class="line">Plugin &apos;kien/ctrlp.vim&apos;</span><br><span class="line">Plugin &apos;Valloric/YouCompleteMe&apos;</span><br><span class="line"></span><br><span class="line">call vundle#end()</span><br><span class="line">filetype plugin indent on</span><br><span class="line"></span><br><span class="line">syntax enable</span><br><span class="line">syntax on</span><br><span class="line">colorscheme molokai</span><br><span class="line">let g:molokai_original = 1</span><br><span class="line"></span><br><span class="line">&quot; setting nerdtree</span><br><span class="line">&quot; ignore files in NERDTree</span><br><span class="line">let NERDTreeIgnore=[&apos;\.pyc$&apos;, &apos;\~$&apos;]</span><br><span class="line">map &lt;F2&gt; :NERDTreeToggle&lt;CR&gt;</span><br><span class="line">autocmd bufenter * if (winnr(&quot;$&quot;) == 1 &amp;&amp; exists(&quot;b:NERDTreeType&quot;) &amp;&amp; b:NERDTreeType == &quot;primary&quot;) | q | endif</span><br><span class="line"></span><br><span class="line">&quot; setting tagbar</span><br><span class="line">nmap &lt;F4&gt; : TagbarToggle&lt;CR&gt;</span><br><span class="line">let g:tagbar_width=30</span><br><span class="line"></span><br><span class="line">&quot; execute python</span><br><span class="line">&quot;map &lt;F5&gt; :w&lt;CR&gt;:!python %&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot; setting ariline</span><br><span class="line">let g:airline_powerline_fonts = 1</span><br><span class="line">let g:airline#extensions#tabline#enabled = 1</span><br><span class="line">let g:airline#extensions#tabline#left_sep = &apos; &apos;</span><br><span class="line">let g:airline#extensions#tabline#left_alt_sep = &apos;|&apos;</span><br><span class="line"></span><br><span class="line">&quot; emmet</span><br><span class="line">let g:user_emmet_expandabbr_key=&apos;&lt;c-e&gt;&apos;</span><br><span class="line">let g:user_emmet_settings=&#123;&apos;indentation&apos;:&apos;    &apos;&#125;</span><br><span class="line"></span><br><span class="line">&quot; easymotion</span><br><span class="line">map f &lt;Plug&gt;(easymotion-prefix)</span><br><span class="line">map ff &lt;Plug&gt;(easymotion-s)</span><br><span class="line">map fs &lt;Plug&gt;(easymotion-f)</span><br><span class="line">map fl &lt;Plug&gt;(easymotion-lineforward)</span><br><span class="line">map fj &lt;Plug&gt;(easymotion-j)</span><br><span class="line">map fk &lt;Plug&gt;(easymotion-k)</span><br><span class="line">map fh &lt;Plug&gt;(easymotion-linebackward)</span><br><span class="line">let g:EasyMotion_smartcase = 1</span><br><span class="line"></span><br><span class="line">&quot; simpylfold</span><br><span class="line">let g:SimpylFold_docstring_preview=1</span><br><span class="line"></span><br><span class="line">&quot; syntastic</span><br><span class="line">let python_highlight_all=1</span><br><span class="line"></span><br><span class="line">set nu</span><br><span class="line">set encoding=utf-8</span><br><span class="line">set fileencoding=utf-8</span><br><span class="line">set tabstop=4</span><br><span class="line">set expandtab</span><br><span class="line">set softtabstop=4</span><br><span class="line">set shiftwidth=4</span><br><span class="line">set autoindent</span><br><span class="line">set fileformat=unix</span><br><span class="line"></span><br><span class="line">&quot;split navigations</span><br><span class="line">nnoremap &lt;C-J&gt; &lt;C-W&gt;&lt;C-J&gt;</span><br><span class="line">nnoremap &lt;C-K&gt; &lt;C-W&gt;&lt;C-K&gt;</span><br><span class="line">nnoremap &lt;C-L&gt; &lt;C-W&gt;&lt;C-L&gt;</span><br><span class="line">nnoremap &lt;C-H&gt; &lt;C-W&gt;&lt;C-H&gt;</span><br><span class="line"></span><br><span class="line">&quot;enable folding</span><br><span class="line">set foldmethod=indent</span><br><span class="line">set foldlevel=99</span><br><span class="line"></span><br><span class="line">&quot;enable folding with the spacebar</span><br><span class="line">nnoremap &lt;space&gt; za</span><br></pre></td></tr></table></figure><p>然后输入<code>vim</code>命令进入命令行模式后， 输入安装命令. 这里的输入的命令是根据<code>.vimrc</code>中插件前缀设定的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PluginInstall</span><br></pre></td></tr></table></figure><h3 id="安装-zsh-和-oh-my-zsh"><a href="#安装-zsh-和-oh-my-zsh" class="headerlink" title="安装 zsh 和 oh-my-zsh"></a>安装 zsh 和 oh-my-zsh</h3><p>zsh 可以通过 yum 来安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install zsh</span><br></pre></td></tr></table></figure><p>使用 wget 下载安装脚本， 并执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</span><br></pre></td></tr></table></figure><p>切换 zsh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /usr/bin/zsh</span><br></pre></td></tr></table></figure><p>可以编辑主目录下<code>.zshrc</code>文件来管理主题</p>]]></content>
      
      
        <tags>
            
            <tag> vim </tag>
            
            <tag> zsh </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>docker 安装与配置</title>
      <link href="/2018/07/16/docker-config/"/>
      <url>/2018/07/16/docker-config/</url>
      <content type="html"><![CDATA[<h3 id="安装-docker"><a href="#安装-docker" class="headerlink" title="安装 docker"></a>安装 docker</h3><p>使用官方的配置脚本， 在 centos 上安装 docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL get.docker.com -o get-docker.sh</span><br><span class="line">sh get-docker.sh --mirror Aliyun</span><br></pre></td></tr></table></figure><h3 id="启动-docker"><a href="#启动-docker" class="headerlink" title="启动 docker"></a>启动 docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><h3 id="测试-docker"><a href="#测试-docker" class="headerlink" title="测试 docker"></a>测试 docker</h3><p>通过下载镜像来测试 docker 是否正常运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><h3 id="加速-docker"><a href="#加速-docker" class="headerlink" title="加速 docker"></a>加速 docker</h3><p>因为网络原因国内下载 docker 镜像会非常缓慢， 可以通过配置阿里云镜像加速 docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://xxxxx.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><p>可以通过<code>docker info</code>命令查看镜像源是否换成了国内的</p>]]></content>
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>基于Token认证的公共Api接口设计</title>
      <link href="/2018/07/13/api-token/"/>
      <url>/2018/07/13/api-token/</url>
      <content type="html"><![CDATA[<p>公共 API 通过设计 token 和 sign 等方法，保证接口安全.</p><h3 id="基于-token"><a href="#基于-token" class="headerlink" title="基于 token"></a>基于 token</h3><p>客户端通过服务器设置的规则访问特定 url 获取 token</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">http://host/api/v1/token?app_id=xxx&amp;app_secret=xxx</span><br><span class="line"># 也可以通过post方法获取</span><br><span class="line">&#123;</span><br><span class="line">    &quot;app_id&quot;: xxx,</span><br><span class="line">    &quot;app_secret&quot;: xxx,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 服务端返回值</span><br><span class="line">&#123;</span><br><span class="line">    &quot;access_token&quot;: &quot;kkIs5V9uTri6&quot;,</span><br><span class="line">    &quot;expires_in&quot;: 7200</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后访问别的 API 接口可以通过参数上传 access_token 来保证访问</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://host/users/1?access_token=kkIs5V9uTri6</span><br></pre></td></tr></table></figure><h3 id="基于-sign-和-token-timestamp"><a href="#基于-sign-和-token-timestamp" class="headerlink" title="基于 sign 和 token, timestamp"></a>基于 sign 和 token, timestamp</h3><p>使用 sign 加密上传参数来保证数据的一致性, 而通过 timestamp 与服务器当前时间戳比较防止恶意调用接口.</p><h4 id="sign-签名算法"><a href="#sign-签名算法" class="headerlink" title="sign 签名算法"></a>sign 签名算法</h4><p>生成加密算法用于调用接口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按一定的顺序, 规则加密, 全部大写或全部小写</span></span><br><span class="line">text = <span class="string">"timestamp=xxx&amp;key=value&amp;token=xxxx"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里全部小写了, 这样就生成了签名</span></span><br><span class="line">sign = md5(text.lower())</span><br></pre></td></tr></table></figure><h4 id="调用接口"><a href="#调用接口" class="headerlink" title="调用接口"></a>调用接口</h4><p>加密后调用 api 接口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 调用更新用户信息的接口</span><br><span class="line">http://host/users/1/update</span><br><span class="line"></span><br><span class="line"># 上传数据</span><br><span class="line">&#123;</span><br><span class="line">    &quot;token&quot;: xxx,</span><br><span class="line">    &quot;timestamp&quot;: xxx,</span><br><span class="line">    &quot;sign&quot;: xxx,</span><br><span class="line">    # 以下是具体更新的数据</span><br><span class="line">    &quot;name&quot; xxx,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="服务器鉴定"><a href="#服务器鉴定" class="headerlink" title="服务器鉴定"></a>服务器鉴定</h4><p>获取客户端的请求数据, 服务器开始鉴定</p><ol><li>判断是否包含参数 token, timestamp, sign</li><li>判断参数中的时间戳的服务器的时间戳间隔(超过 10 分钟失效, 这个时间用户自己设置)</li><li>判断 token 是否过期</li><li>服务器通过相同的签名算法加密后与客户端 sign 作比较</li></ol><p>经过一下判断来确定当前请求是否有效, 如果全部通过就可以返回数据了</p>]]></content>
      
      
        <tags>
            
            <tag> api </tag>
            
            <tag> token </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>基于docker的mysql主从配置</title>
      <link href="/2018/07/13/mysql-master/"/>
      <url>/2018/07/13/mysql-master/</url>
      <content type="html"><![CDATA[<h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>备份数据, 主库挂了从库依然可以访问</p><h3 id="使用-docker-生成镜像"><a href="#使用-docker-生成镜像" class="headerlink" title="使用 docker 生成镜像"></a>使用 docker 生成镜像</h3><p>本文默认为已安装 docker 环境, ubuntu 环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在本机上安装mysql5.7版本</span><br><span class="line">sudo docker pull mysql:5.7</span><br><span class="line"></span><br><span class="line"><span class="comment"># code 在code目录下创建mysql/master和mysql/slave目录</span></span><br><span class="line">mkdir -p mysql/&#123;master,slave&#125;</span><br></pre></td></tr></table></figure><p>然后在 master 和 slave 目录中写入配置文件<code>Dockerfile</code>和<code>my.cnf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># master/Dockerfile和slave/Dockerfile</span><br><span class="line">FROM mysql:5.7</span><br><span class="line">COPY my.cnf /etc/mysql/</span><br><span class="line">EXPOSE 3306</span><br><span class="line">CMD [&quot;mysqld&quot;]</span><br><span class="line"></span><br><span class="line"># master/my.cnf， 主库和从库的server-id不能相同</span><br><span class="line">[mysqld]</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">server-id=1</span><br><span class="line"></span><br><span class="line"># slave/my.cnf</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">server-id=2</span><br></pre></td></tr></table></figure><p>分别在目录中执行以下命令生成镜像</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># master, . 表示当前目录</span></span><br><span class="line">sudo docker build -t master/mysql .</span><br><span class="line"></span><br><span class="line"><span class="comment"># slave</span></span><br><span class="line">sudo docker build -t slave/mysql .</span><br></pre></td></tr></table></figure><h3 id="创建并配置容器"><a href="#创建并配置容器" class="headerlink" title="创建并配置容器"></a>创建并配置容器</h3><p>创建容器初始化数据库密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -p 3307:3306 --name mysql-master -e MYSQL_ROOT_PASSWORD=654321 -d master/mysql</span><br><span class="line">sudo docker run -p 3308:3306 --name mysql-slave -e MYSQL_ROOT_PASSWORD=654321 -d slave/mysql</span><br></pre></td></tr></table></figure><p>可以通过<code>sudo docker ps 查询</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                     NAMES</span><br><span class="line">b69cb0f6d536        slave/mysql         &quot;docker-entrypoint.s…&quot;   2 hours ago         Up 2 hours          0.0.0.0:3308-&gt;3306/tcp   mysql-slave</span><br><span class="line">310f9101ef10        master/mysql        &quot;docker-entrypoint.s…&quot;   2 hours ago         Up 2 hours          0.0.0.0:3307-&gt;3306/tcp   mysql-master</span><br></pre></td></tr></table></figure><p>写一个查询容器<code>IP地址</code>的 sh, 把内容复制到.bashrc 中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function docker_ip()&#123;</span><br><span class="line">  sudo docker inspect --format &apos;&#123;&#123; .NetworkSettings.IPAddress &#125;&#125;&apos; $1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看两个容器服务的<code>IP地址</code>, 连接数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询地址</span></span><br><span class="line">docker_ip mysql-master  <span class="comment"># 172.17.0.2</span></span><br><span class="line">docker_ip mysql-slave   <span class="comment"># 172.17.0.3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接数据库</span></span><br><span class="line">mysql -u root -h 172.17.0.2 -p</span><br><span class="line">mysql -u root -h 172.17.0.3 -p</span><br></pre></td></tr></table></figure><p>在主库上进行配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 设置user用户并设置所有host可以访问, 访问密码654321</span><br><span class="line">GRANT SELECT, REPLICATION SLAVE ON *.* to &apos;user&apos;@&apos;%&apos; identified by &apos;654321&apos;;</span><br><span class="line"></span><br><span class="line"># 查看容器状态</span><br><span class="line">show master status</span><br><span class="line"></span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| mysql-bin.000003 |     1028 |              |                  |                   |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br></pre></td></tr></table></figure><p>在从库上进行配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">change master to</span><br><span class="line">master_host=&apos;172.17.0.2&apos;, # 连接的master IP地址</span><br><span class="line">master_user=&apos;user&apos;,</span><br><span class="line">master_log_file=&apos;mysql-bin.000003&apos;,</span><br><span class="line">master_log_pos=1028,</span><br><span class="line">master_port=3306,</span><br><span class="line">master_password=&apos;654321&apos;;</span><br><span class="line"></span><br><span class="line"># 执行命令并查看连接状态</span><br><span class="line">mysql &gt; start slave;</span><br><span class="line">mysql &gt; show slave status\G;</span><br><span class="line"></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: 172.17.0.2</span><br><span class="line">                  Master_User: user</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000003</span><br><span class="line">          Read_Master_Log_Pos: 1028</span><br><span class="line">               Relay_Log_File: b69cb0f6d536-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 503</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000003</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB:</span><br><span class="line">          Replicate_Ignore_DB:</span><br><span class="line">           Replicate_Do_Table:</span><br><span class="line">       Replicate_Ignore_Table:</span><br><span class="line">      Replicate_Wild_Do_Table:</span><br><span class="line">  Replicate_Wild_Ignore_Table:</span><br><span class="line">                   Last_Errno: 0</span><br><span class="line">                   Last_Error:</span><br><span class="line">                 Skip_Counter: 0</span><br><span class="line">          Exec_Master_Log_Pos: 1028</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"># 如果配置错误执行stop slave后重新配置</span><br><span class="line">mysql &gt; stop slave;</span><br><span class="line">mysql &gt; 配置...</span><br><span class="line">mysql &gt; start slave;</span><br></pre></td></tr></table></figure><p><code>Slave_IO_Running</code>和<code>Slave_SQL_Running</code>必须是 Yes, 如果是 No 和 Connecting 表示连接失败</p><p>失败原因可能有:</p><ol><li>连接 master 的 IP 地址有误</li><li>配置密码错误</li><li>mysql_log_pos 有误</li></ol><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>在主库创建一个数据库, 在从库上查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 主库</span><br><span class="line">create database abc default character set utf8;</span><br><span class="line"></span><br><span class="line"># 从库</span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| abc                |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><h3 id="参考地址"><a href="#参考地址" class="headerlink" title="参考地址"></a>参考地址</h3><ul><li><a href="https://laravel-china.org/articles/6631/using-docker-to-complete-master-slave-configuration-of-mysql-database" target="_blank" rel="noopener">https://laravel-china.org/articles/6631/using-docker-to-complete-master-slave-configuration-of-mysql-database</a></li><li><a href="https://www.jianshu.com/p/0439206e1f28" target="_blank" rel="noopener">https://www.jianshu.com/p/0439206e1f28</a></li></ul>]]></content>
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
